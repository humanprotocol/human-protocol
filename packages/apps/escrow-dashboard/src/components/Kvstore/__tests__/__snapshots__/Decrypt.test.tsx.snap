// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Decrypt component renders correctly, corresponds to the snapshot 1`] = `
<div
  className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 css-wprbfx-MuiGrid-root"
>
  <div
    className="MuiBox-root css-9p5j7y"
  >
    <div
      className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ps6pg7-MuiPaper-root"
    >
      <div
        className="MuiBox-root css-ud8e2h"
      >
        <div
          className="MuiGrid-root MuiGrid-container css-tfl2rr-MuiGrid-root"
        >
          <div
            className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
          >
            <p
              className="MuiTypography-root MuiTypography-body1 css-1wjnbhc-MuiTypography-root"
            >
              Decrypt
            </p>
          </div>
        </div>
      </div>
      <div
        className="MuiGrid-root MuiGrid-container MuiGrid-direction-xs-column css-115thbp-MuiGrid-root"
      >
        <div
          className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column css-sllrir-MuiGrid-root"
        >
          <div
            className="MuiBox-root css-1egco0l"
          >
            <p
              className="MuiTypography-root MuiTypography-body1 css-ahj2mt-MuiTypography-root"
            >
              Decrypt using your public key and private key
            </p>
          </div>
          <div
            className="MuiFormControl-root MuiTextField-root css-1akjbnu-MuiFormControl-root-MuiTextField-root"
          >
            <label
              className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-sizeMedium MuiInputLabel-outlined MuiFormLabel-colorPrimary MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-sizeMedium MuiInputLabel-outlined css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root"
              data-shrink={false}
              htmlFor="outlined-basic"
              id="outlined-basic-label"
            >
              Key
            </label>
            <div
              className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorPrimary MuiInputBase-formControl css-9ddj71-MuiInputBase-root-MuiOutlinedInput-root"
              onClick={[Function]}
            >
              <input
                aria-invalid={false}
                autoFocus={false}
                className="MuiInputBase-input MuiOutlinedInput-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                disabled={false}
                id="outlined-basic"
                onAnimationStart={[Function]}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                type="text"
                value=""
              />
              <fieldset
                aria-hidden={true}
                className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
              >
                <legend
                  className="css-yjsfm1"
                >
                  <span>
                    Key
                  </span>
                </legend>
              </fieldset>
            </div>
          </div>
          <div
            className="MuiBox-root css-0"
          >
            <button
              className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium css-4ck8cy-MuiButtonBase-root-MuiButton-root"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onContextMenu={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              type="button"
            >
              Get
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
