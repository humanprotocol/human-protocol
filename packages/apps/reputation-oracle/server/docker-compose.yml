version: '3.8'

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_SYNC=${POSTGRES_SYNC}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    # volumes: 
    #   - ./db:/var/lib/postgresql/data

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2022-05-26T05-48-41Z
    ports:
      - 9001:9001
      - 9000:9000
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    entrypoint: 'sh'
    command:
      -c "mkdir -p /data/reputation && minio server /data --console-address ':9001'"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3
  minio-mc:
    container_name: minio-mc
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY};
      /usr/bin/mc mb myminio/reputation;
      /usr/bin/mc anonymous set public myminio/reputation;
      "
  reputation-oracle:
    container_name: reputation-oracle
    restart: unless-stopped
    build:
      context: ../../../../
      dockerfile: packages/apps/reputation-oracle/server/Dockerfile
    expose:
      - '${PORT}'
    ports:
      - '${LOCAL_PORT}:${PORT}'
    environment:
      NODE_ENV: ${NODE_ENV}
      HOST: ${HOST}
      PORT: ${PORT}
      FE_URL: ${FE_URL}
      SESSION_SECRET: ${SESSION_SECRET}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_SSL: ${POSTGRES_SSL}
      POSTGRES_SYNC: ${POSTGRES_SYNC}
      POSTGRES_PORT: ${POSTGRES_PORT}
      WEB3_PRIVATE_KEY: ${WEB3_PRIVATE_KEY}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_TOKEN_EXPIRES_IN: ${JWT_ACCESS_TOKEN_EXPIRES_IN}
      JWT_REFRESH_TOKEN_EXPIRES_IN: ${JWT_REFRESH_TOKEN_EXPIRES_IN}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_PORT: ${S3_PORT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_USE_SSL: ${S3_USE_SSL}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      REPUTATION_LEVEL_LOW: ${REPUTATION_LEVEL_LOW}
      REPUTATION_LEVEL_HIGH: ${REPUTATION_LEVEL_HIGH}