{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x87469B4f2Fcf37cBd34E54244c0BD4Fa0603664c",
      "kind": "uups"
    },
    {
      "address": "0xf46B45Df3d956369726d8Bd93Ba33963Ab692920",
      "kind": "uups"
    },
    {
      "address": "0x0376D26246Eb35FF4F9924cF13E6C05fd0bD7Fb4",
      "kind": "uups"
    }
  ],
  "impls": {
    "1cb8454782117915c3001ebd5d7f9c87143ce61d4554171937514a313fa278c9": {
      "address": "0xeC86BE882235A3414cb137E1E897cBD76C0c4996",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:16"
          },
          {
            "label": "escrowCounters",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:17"
          },
          {
            "label": "lastEscrow",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:18"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5e8a69bf455c4d4eb1c74f64b869edd54a39f8a56cbeb20320f2ec2eca7edd7c": {
      "address": "0x32e27177BA6Ea91cf28dfd91a0Da9822A4b74EcF",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/Staking.sol:26"
          },
          {
            "label": "rewardPool",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/Staking.sol:29"
          },
          {
            "label": "minimumStake",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:32"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "204",
            "type": "t_uint32",
            "contract": "Staking",
            "src": "contracts/Staking.sol:35"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_struct(Staker)6888_storage)",
            "contract": "Staking",
            "src": "contracts/Staking.sol:38"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Staking",
            "src": "contracts/Staking.sol:41"
          },
          {
            "label": "allocations",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_struct(Allocation)6748_storage)",
            "contract": "Staking",
            "src": "contracts/Staking.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)43_storage",
            "contract": "Staking",
            "src": "contracts/Staking.sol:592"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Allocation)6748_storage)": {
            "label": "mapping(address => struct IStaking.Allocation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Staker)6888_storage)": {
            "label": "mapping(address => struct Stakes.Staker)",
            "numberOfBytes": "32"
          },
          "t_struct(Allocation)6748_storage": {
            "label": "struct IStaking.Allocation",
            "members": [
              {
                "label": "escrowAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "closedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Staker)6888_storage": {
            "label": "struct Stakes.Staker",
            "members": [
              {
                "label": "tokensStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensAllocated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokensLocked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokensLockedUntil",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d91059c4460d70c3b3ffb7ce20d7a9da68ea609207e70e66fe4843383c9490f3": {
      "address": "0x6478312bE22FeE34a366d8e945d4dBd97388a306",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:21"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_array(t_struct(Reward)6694_storage)dyn_storage)",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "label": "totalFee",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:146"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Reward)6694_storage)dyn_storage": {
            "label": "struct IRewardPool.Reward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Reward)6694_storage)dyn_storage)": {
            "label": "mapping(address => struct IRewardPool.Reward[])",
            "numberOfBytes": "32"
          },
          "t_struct(Reward)6694_storage": {
            "label": "struct IRewardPool.Reward",
            "members": [
              {
                "label": "escrowAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slasher",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
