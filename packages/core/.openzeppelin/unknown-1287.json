{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xBFC7009F3371F93F3B54DdC8caCd02914a37495c",
      "txHash": "0xb5cc6633d8372550a516affd6eb3bfb65df9a873c938746bdee3bd853765c1d1",
      "kind": "uups"
    },
    {
      "address": "0x5e622FF522D81aa426f082bDD95210BC25fCA7Ed",
      "txHash": "0x9745e4be9c8df59f7bc8e34f5421c6424469afbdb374f559ea8cf2275510ddbe",
      "kind": "uups"
    },
    {
      "address": "0xf46B45Df3d956369726d8Bd93Ba33963Ab692920",
      "txHash": "0x53a04f7b403a8a3b89fdc993ff15df90333dbc8e0d87df2a53401d040c33e6e2",
      "kind": "uups"
    },
    {
      "address": "0x87469B4f2Fcf37cBd34E54244c0BD4Fa0603664c",
      "txHash": "0x39bb9588eb2bbffa1318d24d992ce4f195824301a824c261f05efd9b95759a0e",
      "kind": "uups"
    }
  ],
  "impls": {
    "5065563035da2cf0a9ccc5330af342527e14726240fd88997800b20b51ca7aaf": {
      "address": "0xD8c35adC3b386d092846a93015220b7Fe8efD938",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:16"
          },
          {
            "label": "escrowCounters",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:17"
          },
          {
            "label": "lastEscrow",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:18"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cae65b8f50337c1dca74ba0eb1370dc1e9494498c41590e1f88603f6d8f1fd84": {
      "address": "0x4DCB3906A65B77f6a588087652E6Dd9685d1F67f",
      "txHash": "0x956b2d900308c805c37a77be98dadc47fd31ffdc0e51c1ad621f91e75ac2f5db",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:16"
          },
          {
            "label": "escrowCounters",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:17"
          },
          {
            "label": "lastEscrow",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:18"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9737c9f30c6de85d6ea5d58b6d97e39fdefcdf6e4ddd6485660bcafb3d7bdf4b": {
      "address": "0x854EC65E9e5e973C458FC2c92F6E0CbD403f5b95",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/Staking.sol:26"
          },
          {
            "label": "rewardPool",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/Staking.sol:29"
          },
          {
            "label": "minimumStake",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:32"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "204",
            "type": "t_uint32",
            "contract": "Staking",
            "src": "contracts/Staking.sol:35"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_struct(Staker)6693_storage)",
            "contract": "Staking",
            "src": "contracts/Staking.sol:38"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Staking",
            "src": "contracts/Staking.sol:41"
          },
          {
            "label": "allocations",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_struct(Allocation)6553_storage)",
            "contract": "Staking",
            "src": "contracts/Staking.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)43_storage",
            "contract": "Staking",
            "src": "contracts/Staking.sol:581"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Allocation)6553_storage)": {
            "label": "mapping(address => struct IStaking.Allocation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Staker)6693_storage)": {
            "label": "mapping(address => struct Stakes.Staker)",
            "numberOfBytes": "32"
          },
          "t_struct(Allocation)6553_storage": {
            "label": "struct IStaking.Allocation",
            "members": [
              {
                "label": "escrowAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "closedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Staker)6693_storage": {
            "label": "struct Stakes.Staker",
            "members": [
              {
                "label": "tokensStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensAllocated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokensLocked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokensLockedUntil",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "14ec7e82555dc0398381585da8cdbc43e7a8b6e8fc7e28bd070b1390050b0d2b": {
      "address": "0x5517fE916Fe9F8dB15B0DDc76ebDf0BdDCd4ed18",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:21"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_array(t_struct(Reward)6501_storage)dyn_storage)",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "label": "totalFee",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:137"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Reward)6501_storage)dyn_storage": {
            "label": "struct IRewardPool.Reward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Reward)6501_storage)dyn_storage)": {
            "label": "mapping(address => struct IRewardPool.Reward[])",
            "numberOfBytes": "32"
          },
          "t_struct(Reward)6501_storage": {
            "label": "struct IRewardPool.Reward",
            "members": [
              {
                "label": "escrowAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slasher",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "adb26cc2a129192ee782ae5451b70ab09485d00baa46f24dad20dc55a16087a7": {
      "address": "0x6478312bE22FeE34a366d8e945d4dBd97388a306",
      "txHash": "0xf13ab228b3fda3b668c426c2f62ff33eb9533c06480fae76365d3dc25e0babd1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:16"
          },
          {
            "label": "escrowCounters",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:17"
          },
          {
            "label": "lastEscrow",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:18"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4924150f83dae4ba388377cd75189be20abee7147d209249d097c6270aea21f7": {
      "address": "0x295c5AB1A5eDb8dC20d4508012eF00Fd1D31d8dE",
      "txHash": "0x7f65f538606e3fdb25531cf882abdbb0bbcc74984c32e9ff33115042a1668196",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/Staking.sol:26"
          },
          {
            "label": "rewardPool",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/Staking.sol:29"
          },
          {
            "label": "minimumStake",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/Staking.sol:32"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "204",
            "type": "t_uint32",
            "contract": "Staking",
            "src": "contracts/Staking.sol:35"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_struct(Staker)7335_storage)",
            "contract": "Staking",
            "src": "contracts/Staking.sol:38"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Staking",
            "src": "contracts/Staking.sol:41"
          },
          {
            "label": "allocations",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_struct(Allocation)7195_storage)",
            "contract": "Staking",
            "src": "contracts/Staking.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)43_storage",
            "contract": "Staking",
            "src": "contracts/Staking.sol:591"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Allocation)7195_storage)": {
            "label": "mapping(address => struct IStaking.Allocation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Staker)7335_storage)": {
            "label": "mapping(address => struct Stakes.Staker)",
            "numberOfBytes": "32"
          },
          "t_struct(Allocation)7195_storage": {
            "label": "struct IStaking.Allocation",
            "members": [
              {
                "label": "escrowAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "closedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Staker)7335_storage": {
            "label": "struct Stakes.Staker",
            "members": [
              {
                "label": "tokensStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensAllocated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokensLocked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokensLockedUntil",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ca5733762e0cfc07034c9a481ba85a25036b270dae38d2e212b1bbf55afac99e": {
      "address": "0x6B220A6306D8D86C9878A1FBb3F49707b3E2b405",
      "txHash": "0xb342e4c8ec87a3f224e781e87d9fb53edfad6f5a8c6ce93c4764aaa2640925d8",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:21"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_array(t_struct(Reward)7143_storage)dyn_storage)",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "label": "totalFee",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "RewardPool",
            "src": "contracts/RewardPool.sol:144"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Reward)7143_storage)dyn_storage": {
            "label": "struct IRewardPool.Reward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Reward)7143_storage)dyn_storage)": {
            "label": "mapping(address => struct IRewardPool.Reward[])",
            "numberOfBytes": "32"
          },
          "t_struct(Reward)7143_storage": {
            "label": "struct IRewardPool.Reward",
            "members": [
              {
                "label": "escrowAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slasher",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c483f36124422742342eee0ba46ed38a3932266d67ed525556d5533ea3cb21b9": {
      "address": "0x13DbA7F7e14B6Cd5C92A45ed0EE626EA57d516bc",
      "txHash": "0x0b5933e1000047f0aaf04b7119764d6fb073599f5223ed0991149e6acb5537ee",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "counter",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:16"
          },
          {
            "label": "escrowCounters",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:17"
          },
          {
            "label": "lastEscrow",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:18"
          },
          {
            "label": "staking",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "EscrowFactory",
            "src": "contracts/EscrowFactory.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
