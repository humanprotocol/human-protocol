/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RewardPool,
  RewardPoolInterface,
} from "../../contracts/RewardPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "slasher",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_slasher",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokens",
        type: "uint256",
      },
    ],
    name: "addReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    name: "distributeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    name: "getRewards",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "escrowAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "slasher",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256",
          },
        ],
        internalType: "struct IRewardPool.Reward[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "slasher",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611e5061011960003960008181610644015281816106f40152818161084a015281816108fa0152610a5e0152611e506000f3fe6080604052600436106100f35760003560e01c8063715018a61161008a578063b933ceac11610059578063b933ceac14610293578063d0ed26ae146102e6578063f2fde38b14610306578063fc0c546a1461032657600080fd5b8063715018a61461021057806379ee54f7146102255780638da5cb5b146102525780639af1d35a1461027d57600080fd5b80634cf088d9116100c65780634cf088d9146101765780634f1ef286146101c857806351cff8d9146101db57806352d1902d146101fb57600080fd5b8063092193ab146100f85780631794bb3c1461011a5780631df4ccfc1461012d5780633659cfe614610156575b600080fd5b34801561010457600080fd5b50610118610113366004611a90565b610353565b005b610118610128366004611aab565b610487565b34801561013957600080fd5b5061014360cd5481565b6040519081526020015b60405180910390f35b34801561016257600080fd5b50610118610171366004611a90565b61062c565b34801561018257600080fd5b5060ca546101a39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014d565b6101186101d6366004611b16565b610832565b3480156101e757600080fd5b506101186101f6366004611a90565b610a29565b34801561020757600080fd5b50610143610a44565b34801561021c57600080fd5b50610118610b30565b34801561023157600080fd5b50610245610240366004611a90565b610b44565b60405161014d9190611bf6565b34801561025e57600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166101a3565b34801561028957600080fd5b5061014360cb5481565b34801561029f57600080fd5b506102b36102ae366004611c68565b610bfb565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681529390921660208401529082015260600161014d565b3480156102f257600080fd5b50610118610301366004611aab565b610c55565b34801561031257600080fd5b50610118610321366004611a90565b610e03565b34801561033257600080fd5b5060c9546101a39073ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260cc6020908152604080832080548251818502810185019093528083529192909190849084015b828210156103fd5760008481526020908190206040805160608101825260038602909201805473ffffffffffffffffffffffffffffffffffffffff908116845260018083015490911684860152600290910154918301919091529083529092019101610396565b50505073ffffffffffffffffffffffffffffffffffffffff8416600090815260cc602052604081209293506104339291506119fc565b60005b815181101561048257600082828151811061045357610453611c92565b6020026020010151905061046f81602001518260400151610eb7565b5061047b600182611cf0565b9050610436565b505050565b600054610100900460ff16158080156104a75750600054600160ff909116105b806104c15750303b1580156104c1575060005460ff166001145b610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156105b057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6105b8610edb565b6105c3848484610f7b565b801561062657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614156106f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610549565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107677f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161461080a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610549565b6108138161106c565b6040805160008082526020820190925261082f91839190611074565b50565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614156108f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610549565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661096d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610a10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610549565b610a198261106c565b610a2582826001611074565b5050565b610a31611282565b60cd80546000909155610a258282610eb7565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610b0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610549565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610b38611282565b610b426000611303565b565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260cc60209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610bf05760008481526020908190206040805160608101825260038602909201805473ffffffffffffffffffffffffffffffffffffffff908116845260018083015490911684860152600290910154918301919091529083529092019101610b89565b505050509050919050565b60cc6020528160005260406000208181548110610c1757600080fd5b600091825260209091206003909102018054600182015460029092015473ffffffffffffffffffffffffffffffffffffffff91821694509116915083565b60ca5473ffffffffffffffffffffffffffffffffffffffff163314610cd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f43616c6c6572206973206e6f74207374616b696e6720636f6e747261637400006044820152606401610549565b60cb54811015610cf6578060cd54610cee9190611cf0565b60cd55505050565b600060cb5482610d069190611d08565b905060cb5460cd54610d189190611cf0565b60cd556040805160608101825273ffffffffffffffffffffffffffffffffffffffff8087168083528682166020808501828152858701888152600085815260cc845288812080546001818101835591835294909120885160039095020180549488167fffffffffffffffffffffffff00000000000000000000000000000000000000009586161781559251908301805491909716931692909217909455516002909301929092559251919290917f0f7cde3c0518e1cc590491be5861d70a2e333f7e65af2e1ebd91a3c9a3cc638d90610df49086815260200190565b60405180910390a35050505050565b610e0b611282565b73ffffffffffffffffffffffffffffffffffffffff8116610eae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610549565b61082f81611303565b60c954610a259073ffffffffffffffffffffffffffffffffffffffff16838361137a565b600054610100900460ff16610f72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610549565b610b4233611303565b600054610100900460ff16611012576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610549565b60c9805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560ca80549390941692169190911790915560cb55565b61082f611282565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156110a75761048283611407565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110ed57600080fd5b505afa92505050801561113b575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261113891810190611d1f565b60015b6111c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610549565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610549565b50610482838383611511565b60335473ffffffffffffffffffffffffffffffffffffffff163314610b42576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610549565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610482908490611536565b73ffffffffffffffffffffffffffffffffffffffff81163b6114ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610549565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61151a83611642565b6000825111806115275750805b1561048257610626838361168f565b6000611598826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117ce9092919063ffffffff16565b80519091501561048257808060200190518101906115b69190611d38565b610482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610549565b61164b81611407565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606073ffffffffffffffffffffffffffffffffffffffff83163b611735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610549565b6000808473ffffffffffffffffffffffffffffffffffffffff168460405161175d9190611d86565b600060405180830381855af49150503d8060008114611798576040519150601f19603f3d011682016040523d82523d6000602084013e61179d565b606091505b50915091506117c58282604051806060016040528060278152602001611df4602791396117e7565b95945050505050565b60606117dd8484600085611800565b90505b9392505050565b606083156117f65750816117e0565b6117e0838361191b565b606082471015611892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610549565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516118bb9190611d86565b60006040518083038185875af1925050503d80600081146118f8576040519150601f19603f3d011682016040523d82523d6000602084013e6118fd565b606091505b509150915061190e8783838761195f565b925050505b949350505050565b81511561192b5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105499190611da2565b606083156119f25782516119eb5773ffffffffffffffffffffffffffffffffffffffff85163b6119eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610549565b5081611913565b611913838361191b565b508054600082556003029060005260206000209081019061082f91905b80821115611a635780547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168255600182018054909116905560006002820155600301611a19565b5090565b803573ffffffffffffffffffffffffffffffffffffffff81168114611a8b57600080fd5b919050565b600060208284031215611aa257600080fd5b6117e082611a67565b600080600060608486031215611ac057600080fd5b611ac984611a67565b9250611ad760208501611a67565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215611b2957600080fd5b611b3283611a67565b9150602083013567ffffffffffffffff80821115611b4f57600080fd5b818501915085601f830112611b6357600080fd5b813581811115611b7557611b75611ae7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611bbb57611bbb611ae7565b81604052828152886020848701011115611bd457600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b602080825282518282018190526000919060409081850190868401855b82811015611c5b578151805173ffffffffffffffffffffffffffffffffffffffff90811686528782015116878601528501518585015260609093019290850190600101611c13565b5091979650505050505050565b60008060408385031215611c7b57600080fd5b611c8483611a67565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611d0357611d03611cc1565b500190565b600082821015611d1a57611d1a611cc1565b500390565b600060208284031215611d3157600080fd5b5051919050565b600060208284031215611d4a57600080fd5b815180151581146117e057600080fd5b60005b83811015611d75578181015183820152602001611d5d565b838111156106265750506000910152565b60008251611d98818460208701611d5a565b9190910192915050565b6020815260008251806020840152611dc1816040850160208701611d5a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200649b8d67f27e02b3cb369a3fe2a64497814ab47254430032bed7596797677a564736f6c63430008090033";

type RewardPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardPool__factory extends ContractFactory {
  constructor(...args: RewardPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardPool> {
    return super.deploy(overrides || {}) as Promise<RewardPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RewardPool {
    return super.attach(address) as RewardPool;
  }
  override connect(signer: Signer): RewardPool__factory {
    return super.connect(signer) as RewardPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardPoolInterface {
    return new utils.Interface(_abi) as RewardPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardPool {
    return new Contract(address, _abi, signerOrProvider) as RewardPool;
  }
}
