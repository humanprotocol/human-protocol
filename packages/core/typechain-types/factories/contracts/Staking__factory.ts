/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "closedAt",
        type: "uint256",
      },
    ],
    name: "AllocationClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "lockPeriod",
        type: "uint32",
      },
    ],
    name: "SetLockPeriod",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "minimumStake",
        type: "uint256",
      },
    ],
    name: "SetMinumumStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "rewardPool",
        type: "address",
      },
    ],
    name: "SetRewardPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "StakeAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "StakeDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "until",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "slasher",
        type: "address",
      },
    ],
    name: "StakeSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokens",
        type: "uint256",
      },
    ],
    name: "allocate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allocations",
    outputs: [
      {
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    name: "closeAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    name: "getAllocation",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "escrowAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.Allocation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    name: "getAllocationState",
    outputs: [
      {
        internalType: "enum IStaking.AllocationState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListOfStakers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokensStaked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensAllocated",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensLocked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensLockedUntil",
            type: "uint256",
          },
        ],
        internalType: "struct Stakes.Staker[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getStakedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getStaker",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokensStaked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensAllocated",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensLocked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensLockedUntil",
            type: "uint256",
          },
        ],
        internalType: "struct Stakes.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "hasAvailableStake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "hasStake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minimumStake",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_lockPeriod",
        type: "uint32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    name: "isAllocation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockPeriod",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_lockPeriod",
        type: "uint32",
      },
    ],
    name: "setLockPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumStake",
        type: "uint256",
      },
    ],
    name: "setMinimumStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardPool",
        type: "address",
      },
    ],
    name: "setRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokens",
        type: "uint256",
      },
    ],
    name: "slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokens",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "tokensStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensAllocated",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensLockedUntil",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokens",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e8565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e6576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161403d6200012060003960008181610c4e01528181610cfe015281816111fb015281816112ab01526113f0015261403d6000f3fe6080604052600436106101d85760003560e01c80636c5ac81e11610102578063b78b52df11610095578063f2fde38b11610064578063f2fde38b146106f6578063f489f23b14610716578063fc0c546a14610736578063fd5e6dd11461076357600080fd5b8063b78b52df1461065b578063e73e14bf1461067b578063ec5ffac2146106c0578063f1d60d66146106d657600080fd5b80638da5cb5b116100d15780638da5cb5b146105b657806398c657dc146105e1578063a23c44b11461060e578063a694fc3a1461063b57600080fd5b80636c5ac81e1461054b57806370b97cb51461055e578063715018a61461058157806378238c371461059657600080fd5b80633ccfd60b1161017a57806352d1902d1161014957806352d1902d1461047357806363c28db11461049657806366666aa9146104d957806368f39a071461052b57600080fd5b80633ccfd60b146103765780633fd8b02f1461038b5780634f1ef286146103bd57806352a9039c146103d057600080fd5b8063233e9903116101b6578063233e9903146102f45780632e17de78146103165780633659cfe6146103365780633aa63c611461035657600080fd5b80630e022923146101dd57806316934fc4146102625780631af963aa146102c4575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004613a33565b610783565b6040516102599190600060a08201905073ffffffffffffffffffffffffffffffffffffffff8084511683528060208501511660208401525060408301516040830152606083015160608301526080830151608083015292915050565b60405180910390f35b34801561026e57600080fd5b506102a461027d366004613a33565b60cd6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610259565b3480156102d057600080fd5b506102e46102df366004613a33565b6107f0565b6040519015158152602001610259565b34801561030057600080fd5b5061031461030f366004613a4e565b610857565b005b34801561032257600080fd5b50610314610331366004613a4e565b61086b565b34801561034257600080fd5b50610314610351366004613a33565b610c36565b34801561036257600080fd5b50610314610371366004613a67565b610e39565b34801561038257600080fd5b5061031461112f565b34801561039757600080fd5b5060cc546103a89063ffffffff1681565b60405163ffffffff9091168152602001610259565b6103146103cb366004613ae1565b6111e3565b3480156103dc57600080fd5b506104336103eb366004613a33565b60cf602052600090815260409020805460018201546002830154600384015460049094015473ffffffffffffffffffffffffffffffffffffffff938416949390921692909185565b6040805173ffffffffffffffffffffffffffffffffffffffff9687168152959094166020860152928401919091526060830152608082015260a001610259565b34801561047f57600080fd5b506104886113d6565b604051908152602001610259565b3480156104a257600080fd5b506104886104b1366004613a33565b73ffffffffffffffffffffffffffffffffffffffff16600090815260cd602052604090205490565b3480156104e557600080fd5b5060ca546105069073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610259565b34801561053757600080fd5b50610314610546366004613a33565b6114c2565b610314610559366004613bd5565b611577565b34801561056a57600080fd5b50610573611717565b604051610259929190613c11565b34801561058d57600080fd5b50610314611944565b3480156105a257600080fd5b506103146105b1366004613a33565b611958565b3480156105c257600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610506565b3480156105ed57600080fd5b506106016105fc366004613a33565b611969565b6040516102599190613cfc565b34801561061a57600080fd5b5061062e610629366004613a33565b611974565b6040516102599190613d3d565b34801561064757600080fd5b50610314610656366004613a4e565b6119fa565b34801561066757600080fd5b50610314610676366004613d68565b611c58565b34801561068757600080fd5b506102e4610696366004613a33565b73ffffffffffffffffffffffffffffffffffffffff16600090815260cd6020526040902054151590565b3480156106cc57600080fd5b5061048860cb5481565b3480156106e257600080fd5b506102e46106f1366004613a33565b611d0a565b34801561070257600080fd5b50610314610711366004613a33565b611d2f565b34801561072257600080fd5b50610314610731366004613d92565b611de3565b34801561074257600080fd5b5060c9546105069073ffffffffffffffffffffffffffffffffffffffff1681565b34801561076f57600080fd5b5061050661077e366004613a4e565b611df4565b6107e16040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b6107ea82611e2b565b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260cd60209081526040808320815160808101835281548152600182015493810193909352600281015491830191909152600301546060820152819061085090611ef3565b1192915050565b61085f611f09565b61086881611f8a565b50565b33600081815260cd602090815260409182902082516080810184528154808252600183015493820193909352600282015493810193909352600301546060830152610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616c6c6572206973206e6f742061207374616b65720000000000000000000060448201526064015b60405180910390fd5b33600090815260cd60205260409020805461098e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d62657200000000000000604482015260640161090e565b600084116109f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d62657200000000000000604482015260640161090e565b604080516080810182528254815260018301546020820152600283015491810191909152600382015460608201528490610a3190611ef3565b1015610a99576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f496e73756666696369656e7420616d6f756e7420746f20756e7374616b650000604482015260640161090e565b6000610ae185610adb84604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050612027565b90612037565b9050801580610af2575060cb548110155b610b7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f546f74616c207374616b652069732062656c6f7720746865206d696e696d756d60448201527f207468726573686f6c6400000000000000000000000000000000000000000000606482015260840161090e565b60408051608081018252835481526001840154602082015260028401549181019190915260038301546060820152600090610bb890612080565b90508015610bc957610bc9336120ad565b60cc54610be3908490889063ffffffff908116906121bf16565b6002830154600384015460405133927fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0192610c2692918252602082015260400190565b60405180910390a2505050505050565b3073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161415610cfc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161090e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610d717f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610e14576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161090e565b610e1d81612217565b604080516000808252602082019092526108689183919061221f565b610e41611f09565b73ffffffffffffffffffffffffffffffffffffffff8216610ebe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d75737420626520612076616c69642061646472657373000000000000000000604482015260640161090e565b73ffffffffffffffffffffffffffffffffffffffff808416600090815260cd60209081526040808320938616835260cf90915290206002810154610f5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d62657200000000000000604482015260640161090e565b8060020154831115610ff2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f536c61736820746f6b656e732065786365656420616c6c6f6361746564206f6e60448201527f6573000000000000000000000000000000000000000000000000000000000000606482015260840161090e565b610ffc828461242d565b600281015461100b9084612037565b600282015561101a8284612448565b60ca5461103d9073ffffffffffffffffffffffffffffffffffffffff168461245a565b60ca546040517fd0ed26ae00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301528881166024830152604482018690529091169063d0ed26ae90606401600060405180830381600087803b1580156110b957600080fd5b505af11580156110cd573d6000803e3d6000fd5b50506040805186815273ffffffffffffffffffffffffffffffffffffffff8a811660208301528089169450891692507f71a8c830f4b619fc8248691f28f33646d6d9553a9fe6f7ba80e179fd391779ba910160405180910390a3505050505050565b33600081815260cd6020908152604091829020825160808101845281548082526001830154938201939093526002820154938101939093526003015460608301526111d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616c6c6572206973206e6f742061207374616b657200000000000000000000604482015260640161090e565b6111df336120ad565b5050565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614156112a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161090e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661131e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146113c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161090e565b6113ca82612217565b6111df8282600161221f565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461149d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161090e565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b33600081815260cd602090815260409182902082516080810184528154808252600183015493820193909352600282015493810193909352600301546060830152611569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616c6c6572206973206e6f742061207374616b657200000000000000000000604482015260640161090e565b6115728361247e565b505050565b600054610100900460ff16158080156115975750600054600160ff909116105b806115b15750303b1580156115b1575060005460ff166001145b61163d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161090e565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561169b57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6116a36126e3565b6116ae848484612783565b801561171157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b606080600060ce80548060200260200160405190810160405280929190818152602001828054801561177f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611754575b50508351939450505081151590506117f857604080516000808252602082018181528284019093529091906117ed565b6117da6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001906001900390816117af5790505b509350935050509091565b60008167ffffffffffffffff81111561181357611813613ab2565b60405190808252806020026020018201604052801561186f57816020015b61185c6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001906001900390816118315790505b50905060005b828110156119385760cd600085838151811061189357611893613dad565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505082828151811061191a5761191a613dad565b6020026020010181905250808061193090613e0b565b915050611875565b50919491935090915050565b61194c611f09565b611956600061286c565b565b611960611f09565b610868816128e3565b60006107ea826129cf565b61199f6040518060800160405280600081526020016000815260200160008152602001600081525090565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260cd6020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015290565b60008111611a64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d62657200000000000000604482015260640161090e565b33600090815260cd6020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015260cb54611abc83611ab684612027565b90612b4a565b1015611b4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f546f74616c207374616b652069732062656c6f7720746865206d696e696d756d60448201527f207468726573686f6c6400000000000000000000000000000000000000000000606482015260840161090e565b8051611bfa57506040805160808101825260008082526020808301828152838501838152606085018481523380865260cd90945295842085518155915160018084019190915590516002830155945160039091015560ce805494850181559091527fd36cd1c74ef8d7326d8021b776c18fb5a5724b7f7bc93c2f42e43e10ef27d12a90920180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169092179091555b611c05333084612bc3565b33600090815260cd60205260409020611c1e9083612be8565b60405182815233907f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc2906020015b60405180910390a25050565b33600081815260cd602090815260409182902082516080810184528154808252600183015493820193909352600282015493810193909352600301546060830152611cff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616c6c6572206973206e6f742061207374616b657200000000000000000000604482015260640161090e565b611711338585612bf4565b600080611d16836129cf565b6004811115611d2757611d27613ccd565b141592915050565b611d37611f09565b73ffffffffffffffffffffffffffffffffffffffff8116611dda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161090e565b6108688161286c565b611deb611f09565b61086881612f99565b60ce8181548110611e0457600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b611e896040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b5073ffffffffffffffffffffffffffffffffffffffff908116600090815260cf6020908152604091829020825160a0810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260040154608082015290565b60006107ea611f0183613068565b835190612037565b60335473ffffffffffffffffffffffffffffffffffffffff163314611956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161090e565b60008111611ff4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d62657200000000000000604482015260640161090e565b60cb81905560405181907f4ae07ff10245d5c3330b9a15e8c6b8644ea81b656ff7d5428edda75e77d061cd90600090a250565b604081015181516000916107ea91905b600061207983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613085565b9392505050565b60008160600151600014806120985750816060015143105b156120a557506000919050565b506040015190565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260cd602052604081206120db906130d9565b90506000811161216d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f5374616b6520686173206e6f20617661696c61626c6520746f6b656e7320666f60448201527f72207769746864726177616c0000000000000000000000000000000000000000606482015260840161090e565b612177828261245a565b8173ffffffffffffffffffffffffffffffffffffffff167f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc82604051611c4c91815260200190565b60028301548190156121eb576121e86121dc856003015443613134565b8560020154848661314e565b90505b60028401546121fa9084612b4a565b60028501556122094382612b4a565b846003018190555050505050565b610868611f09565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156122525761157283613185565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561229857600080fd5b505afa9250505080156122e6575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526122e391810190613e44565b60015b612372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161090e565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114612421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161090e565b5061157283838361328f565b600182015461243c9082612037565b82600101819055505050565b81546124549082612037565b90915550565b60c9546111df9073ffffffffffffffffffffffffffffffffffffffff1683836132b4565b6000612489826129cf565b9050600481600481111561249f5761249f613ccd565b1461252c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f416c6c6f636174696f6e20686173206e6f20636f6d706c65746564207374617460448201527f6500000000000000000000000000000000000000000000000000000000000000606482015260840161090e565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260cf60209081526040808320815160a0810183528154861681526001820154909516928501929092526002820154908401526003015460608301819052436080840181905261259791613134565b905060008111612628576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f416c6c6f636174696f6e2063616e6e6f7420626520636c6f73656420736f206560448201527f61726c7900000000000000000000000000000000000000000000000000000000606482015260840161090e565b60408083015160208085015173ffffffffffffffffffffffffffffffffffffffff16600090815260cd909152919091206126619161242d565b8373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff167f9ec6f3fe8a57fd60609439a97d851e335d635eeb931fca0f26d5fc217936b3c6846040015185608001516040516126d5929190918252602082015260400190565b60405180910390a350505050565b600054610100900460ff1661277a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161090e565b6119563361286c565b600054610100900460ff1661281a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161090e565b60c980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff851617905561286382611f8a565b61157281612f99565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8116612960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d75737420626520612076616c69642061646472657373000000000000000000604482015260640161090e565b60ca80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f173d73afad648e625c4a53878536f7a2debed1f51a04f21d728bce3cf534fcc190600090a250565b73ffffffffffffffffffffffffffffffffffffffff808216600090815260cf6020526040812060018101549192909116612a0c5750600092915050565b600083905060008173ffffffffffffffffffffffffffffffffffffffff1663200d2ed26040518163ffffffff1660e01b815260040160206040518083038186803b158015612a5957600080fd5b505afa158015612a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a919190613e5d565b90508260030154600014158015612aac575060008360020154115b8015612ac957506001816005811115612ac757612ac7613ccd565b145b15612ad957506001949350505050565b6004830154158015612afc57506000816005811115612afa57612afa613ccd565b145b15612b0c57506002949350505050565b6004830154158015612b2f57506004816005811115612b2d57612b2d613ccd565b145b15612b3f57506004949350505050565b506003949350505050565b600080612b578385613e7e565b905083811015612079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161090e565b60c9546115729073ffffffffffffffffffffffffffffffffffffffff16848484613388565b81546124549082612b4a565b73ffffffffffffffffffffffffffffffffffffffff8216612c71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d75737420626520612076616c69642061646472657373000000000000000000604482015260640161090e565b80612cec60cd60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050611ef3565b1015612d7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f496e73756666696369656e7420616d6f756e74206f6620746f6b656e7320696e60448201527f20746865207374616b6500000000000000000000000000000000000000000000606482015260840161090e565b60008111612de4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d62657200000000000000604482015260640161090e565b6000612def836129cf565b6004811115612e0057612e00613ccd565b14612e67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f416c6c6f636174696f6e20616c72656164792065786973747300000000000000604482015260640161090e565b6040805160a08101825273ffffffffffffffffffffffffffffffffffffffff8085168083528682166020808501828152858701888152436060880190815260006080890181815296815260cf855289812089518154908a167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178255945160018201805491909a1695169490941790975590516002830181905590516003830155935160049091015590835260cd90529290209091612f2991906133e6565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fe994fee7ff4d4c7994071d0b9ed626d9b41e4ed5c6126806241b1906a774a2a0836040015184606001516040516126d5929190918252602082015260400190565b60008163ffffffff1611613009576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d62657200000000000000604482015260640161090e565b60cc80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff83169081179091556040517f4cabd6339016cba9857f365bca7bc3c7e1976823b85052fd7281d313f52c8ae890600090a250565b60006107ea82604001518360200151612b4a90919063ffffffff16565b600081848411156130c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e9190613ec2565b5060006130d08486613f13565b95945050505050565b60008061311883604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050612080565b905080156107ea5761312a83826133f5565b6107ea8382612448565b6000818311613144576000612079565b6120798383612037565b600061317a61315d8584612b4a565b61317461316a868661341a565b611ab6898961341a565b906134cf565b90505b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81163b613229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161090e565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61329883613511565b6000825111806132a55750805b1561157257611711838361355e565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526115729084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613694565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526117119085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401613306565b600182015461243c9082612b4a565b60028201546134049082612037565b600283018190556111df57600060038301555050565b600082613429575060006107ea565b60006134358385613f2a565b9050826134428583613f67565b14612079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f7700000000000000000000000000000000000000000000000000000000000000606482015260840161090e565b600061207983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506137a0565b61351a81613185565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606073ffffffffffffffffffffffffffffffffffffffff83163b613604576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161090e565b6000808473ffffffffffffffffffffffffffffffffffffffff168460405161362c9190613fa2565b600060405180830381855af49150503d8060008114613667576040519150601f19603f3d011682016040523d82523d6000602084013e61366c565b606091505b50915091506130d08282604051806060016040528060278152602001613fe1602791396137e8565b60006136f6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166138019092919063ffffffff16565b80519091501561157257808060200190518101906137149190613fbe565b611572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161090e565b600081836137db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e9190613ec2565b5060006130d08486613f67565b606083156137f7575081612079565b6120798383613810565b606061317d8484600085613854565b8151156138205781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e9190613ec2565b6060824710156138e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161090e565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161390f9190613fa2565b60006040518083038185875af1925050503d806000811461394c576040519150601f19603f3d011682016040523d82523d6000602084013e613951565b606091505b50915091506139628783838761396d565b979650505050505050565b60608315613a005782516139f95773ffffffffffffffffffffffffffffffffffffffff85163b6139f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161090e565b508161317d565b61317d8383613810565b803573ffffffffffffffffffffffffffffffffffffffff81168114613a2e57600080fd5b919050565b600060208284031215613a4557600080fd5b61207982613a0a565b600060208284031215613a6057600080fd5b5035919050565b60008060008060808587031215613a7d57600080fd5b613a8685613a0a565b9350613a9460208601613a0a565b9250613aa260408601613a0a565b9396929550929360600135925050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215613af457600080fd5b613afd83613a0a565b9150602083013567ffffffffffffffff80821115613b1a57600080fd5b818501915085601f830112613b2e57600080fd5b813581811115613b4057613b40613ab2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715613b8657613b86613ab2565b81604052828152886020848701011115613b9f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b803563ffffffff81168114613a2e57600080fd5b600080600060608486031215613bea57600080fd5b613bf384613a0a565b925060208401359150613c0860408501613bc1565b90509250925092565b604080825283519082018190526000906020906060840190828701845b82811015613c6057815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101613c2e565b5050508381038285015284518082528583019183019060005b81811015613cc057613cad838551805182526020810151602083015260408101516040830152606081015160608301525050565b9284019260809290920191600101613c79565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160058310613d37577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b81518152602080830151908201526040808301519082015260608083015190820152608081016107ea565b60008060408385031215613d7b57600080fd5b613d8483613a0a565b946020939093013593505050565b600060208284031215613da457600080fd5b61207982613bc1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613e3d57613e3d613ddc565b5060010190565b600060208284031215613e5657600080fd5b5051919050565b600060208284031215613e6f57600080fd5b81516006811061207957600080fd5b60008219821115613e9157613e91613ddc565b500190565b60005b83811015613eb1578181015183820152602001613e99565b838111156117115750506000910152565b6020815260008251806020840152613ee1816040850160208701613e96565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082821015613f2557613f25613ddc565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613f6257613f62613ddc565b500290565b600082613f9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008251613fb4818460208701613e96565b9190910192915050565b600060208284031215613fd057600080fd5b8151801515811461207957600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122019a9c06416237099856d77bc9476e89808c6b72e0a711820327b2d7664cc6fb064736f6c63430008090033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(overrides || {}) as Promise<Staking>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
