/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEscrow,
  IEscrowInterface,
} from "../../../contracts/interfaces/IEscrow";

const _abi = [
  {
    inputs: [],
    name: "abort",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_handlers",
        type: "address[]",
      },
    ],
    name: "addTrustedHandlers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
    ],
    name: "bulkPayOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "complete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reputationOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recordingOracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_reputationOracleStake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_recordingOracleStake",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
    ],
    name: "setup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum IEscrow.EscrowStatuses",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_worker",
        type: "address",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
    ],
    name: "storeResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEscrow__factory {
  static readonly abi = _abi;
  static createInterface(): IEscrowInterface {
    return new utils.Interface(_abi) as IEscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEscrow {
    return new Contract(address, _abi, signerOrProvider) as IEscrow;
  }
}
