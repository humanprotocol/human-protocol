"""Update GT stats with total_uses field

Revision ID: 76f0bc042477
Revises: 9d4367899f90
Create Date: 2024-12-12 18:14:43.885249

"""

import sqlalchemy as sa
from sqlalchemy import Column, ForeignKey, Integer, String, update
from sqlalchemy.orm import declarative_base

from alembic import op

# revision identifiers, used by Alembic.
revision = "76f0bc042477"
down_revision = "9d4367899f90"
branch_labels = None
depends_on = None

Base = declarative_base()


class GtStats(Base):
    __tablename__ = "gt_stats"

    # A composite primary key is used
    task_id = Column(
        String, ForeignKey("tasks.id", ondelete="CASCADE"), primary_key=True, nullable=False
    )
    gt_frame_name = Column(String, primary_key=True, nullable=False)

    failed_attempts = Column(Integer, default=0, nullable=False)
    accepted_attempts = Column(Integer, default=0, nullable=False)
    total_uses = Column(Integer, default=0, nullable=False)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "gt_stats", sa.Column("total_uses", sa.Integer(), nullable=False, server_default="0")
    )
    op.add_column(
        "gt_stats", sa.Column("enabled", sa.Boolean(), nullable=False, server_default="True")
    )
    # ### end Alembic commands ###

    op.execute(
        update(GtStats).values(total_uses=GtStats.accepted_attempts + GtStats.failed_attempts)
    )

    op.alter_column("gt_stats", "total_uses", server_default=None)
    op.alter_column("gt_stats", "enabled", server_default=None)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("gt_stats", "total_uses")
    op.drop_column("gt_stats", "enabled")
    # ### end Alembic commands ###
