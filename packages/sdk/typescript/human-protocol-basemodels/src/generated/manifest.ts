/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type JobMode = 'batch' | 'online' | 'instant_delivery';
export type JobApiKey = string;
export type JobId = string;
export type JobTotalTasks = number;
export type JobId1 = string;
/**
 * An enumeration.
 */
export type BaseJobTypesEnum =
  | 'image_label_binary'
  | 'image_label_multiple_choice'
  | 'text_free_entry'
  | 'text_multiple_choice_one_option'
  | 'text_multiple_choice_multiple_options'
  | 'image_label_area_adjust'
  | 'image_label_area_select'
  | 'image_label_single_polygon'
  | 'image_label_multiple_polygons'
  | 'image_label_semantic_segmentation_one_option'
  | 'image_label_semantic_segmentation_multiple_options'
  | 'image_label_text'
  | 'multi_challenge';
export type RequesterDescription = string;
export type RequesterMaxRepeats = number;
export type RequesterMinRepeats = number;
export type RequesterQuestionExample = string | string[];
export type UnsafeContent = boolean;
export type RequesterAccuracyTarget = number;
export type Version = number;
/**
 * An enumeration.
 */
export type ShapeTypes = 'point' | 'bounding_box' | 'polygon';
export type MinPoints = number;
export type MaxPoints = number;
export type MinShapesPerImage = number;
export type MaxShapesPerImage = number;
export type RestrictToCoords = boolean;
export type MinimumSelectionAreaPerShape = number;
export type MultipleChoiceMaxChoices = number;
export type MultipleChoiceMinChoices = number;
export type OverlapThreshold = number;
export type GroundtruthUri = string;
export type Groundtruth = string;
export type ConfcalcConfigurationId = string;
export type WebhookId = string;
export type ChunkCompleted = string[];
export type JobCompleted = string[];
export type MultiChallengeManifests = NestedManifest[];
export type Network = string;
export type OnlySignResults = boolean;
export type PublicResults = boolean;
export type RequesterDescription1 = string;
export type RequesterMaxRepeats1 = number;
export type RequesterMinRepeats1 = number;
export type RequesterQuestionExample1 = string | string[];
export type UnsafeContent1 = boolean;
export type TaskBidPrice = number;
export type OracleStake = number;
export type ExpirationDate = number;
export type RequesterAccuracyTarget1 = number;
export type ManifestSmartBountyAddr = string;
export type HmtokenAddr = string;
export type MinimumTrustServer = number;
export type MinimumTrustClient = number;
export type RecordingOracleAddr = string;
export type ReputationOracleAddr = string;
export type ReputationAgentAddr = string;
export type RequesterPgpPublicKey = string;
export type RoUri = string;
export type RepoUri = string;
export type BatchResultDeliveryWebhook = string;
export type OnlineResultDeliveryWebhook = string;
export type InstantResultDeliveryWebhook = string;
export type TaskKey = string;
export type DatapointUri = string;
export type DatapointHash = string;
export type Taskdata = TaskData[];
export type TaskdataUri = string;
export type GroundtruthUri1 = string;
export type Groundtruth1 = string;
export type ConfcalcConfigurationId1 = string;
export type RestrictedAudience = RestrictedAudience1;
export type Score = number;
export type Lang = {
  [k: string]: RestrictedAudienceScore;
}[];
export type Country = {
  [k: string]: RestrictedAudienceScore;
}[];
export type Sitekey = {
  [k: string]: RestrictedAudienceScore;
}[];
export type Serverdomain = {
  [k: string]: RestrictedAudienceScore;
}[];
export type Browser = {
  [k: string]: RestrictedAudienceScore;
}[];
export type Confidence = {
  [k: string]: RestrictedAudienceScore;
}[];
export type Reason = {
  [k: string]: RestrictedAudienceScore;
}[];
export type MinDifficulty = number;
export type MinUserScore = number;
export type MaxUserScore = number;
export type LaunchGroupId = number;
export type RejectedUri = string;
export type RejectedCount = number;

/**
 * The manifest description.
 */
export interface Manifest {
  job_mode: JobMode;
  job_api_key?: JobApiKey;
  job_id?: JobId;
  job_total_tasks: JobTotalTasks;
  multi_challenge_manifests?: MultiChallengeManifests;
  request_type: BaseJobTypesEnum;
  network?: Network;
  only_sign_results?: OnlySignResults;
  public_results?: PublicResults;
  requester_restricted_answer_set?: RequesterRestrictedAnswerSet1;
  requester_description?: RequesterDescription1;
  requester_max_repeats?: RequesterMaxRepeats1;
  requester_min_repeats?: RequesterMinRepeats1;
  requester_question?: RequesterQuestion1;
  requester_question_example?: RequesterQuestionExample1;
  unsafe_content?: UnsafeContent1;
  task_bid_price: TaskBidPrice;
  oracle_stake: OracleStake;
  expiration_date?: ExpirationDate;
  requester_accuracy_target?: RequesterAccuracyTarget1;
  manifest_smart_bounty_addr?: ManifestSmartBountyAddr;
  hmtoken_addr?: HmtokenAddr;
  minimum_trust_server?: MinimumTrustServer;
  minimum_trust_client?: MinimumTrustClient;
  recording_oracle_addr?: RecordingOracleAddr;
  reputation_oracle_addr?: ReputationOracleAddr;
  reputation_agent_addr?: ReputationAgentAddr;
  requester_pgp_public_key?: RequesterPgpPublicKey;
  ro_uri?: RoUri;
  repo_uri?: RepoUri;
  batch_result_delivery_webhook?: BatchResultDeliveryWebhook;
  online_result_delivery_webhook?: OnlineResultDeliveryWebhook;
  instant_result_delivery_webhook?: InstantResultDeliveryWebhook;
  request_config?: RequestConfig;
  taskdata?: Taskdata;
  taskdata_uri?: TaskdataUri;
  groundtruth_uri?: GroundtruthUri1;
  groundtruth?: Groundtruth1;
  internal_config?: InternalConfig;
  confcalc_configuration_id?: ConfcalcConfigurationId1;
  restricted_audience?: RestrictedAudience;
  webhook?: Webhook;
  rejected_uri?: RejectedUri;
  rejected_count?: RejectedCount;
  [k: string]: unknown;
}
/**
 * The nested manifest description for multi_challenge jobs
 */
export interface NestedManifest {
  job_id?: JobId1;
  request_type: BaseJobTypesEnum;
  requester_restricted_answer_set?: RequesterRestrictedAnswerSet;
  requester_description?: RequesterDescription;
  requester_max_repeats?: RequesterMaxRepeats;
  requester_min_repeats?: RequesterMinRepeats;
  requester_question?: RequesterQuestion;
  requester_question_example?: RequesterQuestionExample;
  unsafe_content?: UnsafeContent;
  requester_accuracy_target?: RequesterAccuracyTarget;
  request_config?: RequestConfig;
  groundtruth_uri?: GroundtruthUri;
  groundtruth?: Groundtruth;
  confcalc_configuration_id?: ConfcalcConfigurationId;
  webhook?: Webhook;
  [k: string]: unknown;
}
export interface RequesterRestrictedAnswerSet {
  [k: string]: {
    [k: string]: string;
  };
}
export interface RequesterQuestion {
  [k: string]: string;
}
/**
 * Definition of the request_config object in manifest
 */
export interface RequestConfig {
  version?: Version;
  shape_type?: ShapeTypes;
  min_points?: MinPoints;
  max_points?: MaxPoints;
  min_shapes_per_image?: MinShapesPerImage;
  max_shapes_per_image?: MaxShapesPerImage;
  restrict_to_coords?: RestrictToCoords;
  minimum_selection_area_per_shape?: MinimumSelectionAreaPerShape;
  multiple_choice_max_choices?: MultipleChoiceMaxChoices;
  multiple_choice_min_choices?: MultipleChoiceMinChoices;
  overlap_threshold?: OverlapThreshold;
  [k: string]: unknown;
}
/**
 * Model for webhook configuration
 */
export interface Webhook {
  webhook_id: WebhookId;
  chunk_completed?: ChunkCompleted;
  job_completed?: JobCompleted;
  [k: string]: unknown;
}
export interface RequesterRestrictedAnswerSet1 {
  [k: string]: {
    [k: string]: string;
  };
}
export interface RequesterQuestion1 {
  [k: string]: string;
}
/**
 * Objects within taskdata list in Manifest
 */
export interface TaskData {
  task_key: TaskKey;
  datapoint_uri: DatapointUri;
  datapoint_hash: DatapointHash;
  [k: string]: unknown;
}
/**
 * Discarded from incoming manifests
 */
export interface InternalConfig {
  exchange?: Exchange;
  reco?: Reco;
  repo?: Repo;
  other?: Other;
  mitl?: Mitl;
  [k: string]: unknown;
}
export interface Exchange {
  [k: string]: string | number;
}
export interface Reco {
  [k: string]: string | number;
}
export interface Repo {
  [k: string]: string | number;
}
export interface Other {
  [k: string]: string | number;
}
export interface Mitl {
  [k: string]:
    | string
    | number
    | {
        [k: string]: string | number;
      };
}
export interface RestrictedAudience1 {
  lang?: Lang;
  country?: Country;
  sitekey?: Sitekey;
  serverdomain?: Serverdomain;
  browser?: Browser;
  confidence?: Confidence;
  reason?: Reason;
  min_difficulty?: MinDifficulty;
  min_user_score?: MinUserScore;
  max_user_score?: MaxUserScore;
  launch_group_id?: LaunchGroupId;
  [k: string]: unknown;
}
export interface RestrictedAudienceScore {
  score: Score;
  [k: string]: unknown;
}
