##################################################
#                    Entities                    #
##################################################

type Holder @entity {
  id: ID!
  address: Bytes! # address
  balance: BigInt!
}

type Worker @entity {
  id: ID!
  address: Bytes!
  totalAmountReceived: BigInt!
  payoutCount: BigInt!
}

type Leader @entity {
  id: ID!
  address: Bytes!
  amountStaked: BigInt!
  amountAllocated: BigInt!
  amountLocked: BigInt!
  lockedUntilTimestamp: BigInt!
  amountWithdrawn: BigInt!
  amountSlashed: BigInt!
  reputation: BigInt!
  reward: BigInt!
  amountJobsLaunched: BigInt!

  role: String
  fee: BigInt
  publicKey: String
  webhookUrl: String
  url: String
  urls: [LeaderURL!]! @derivedFrom(field: "leader")
}

type LeaderURL @entity {
  id: ID!
  key: String
  url: String
  leader: Leader!
}

type Escrow @entity {
  id: ID!
  address: Bytes! # address
  token: Bytes! # address
  factoryAddress: Bytes! # address
  launcher: Bytes! # address
  count: BigInt!
  balance: BigInt!
  totalFundedAmount: BigInt!
  amountPaid: BigInt!
  status: String! # string
  manifestUrl: String # string
  manifestHash: String # string
  reputationOracle: Bytes # address
  reputationOracleFee: BigInt
  recordingOracle: Bytes # address
  recordingOracleFee: BigInt
  exchangeOracle: Bytes # address
  exchangeOracleFee: BigInt
  intermediateResultsUrl: String # string
  finalResultsUrl: String # string
  jobRequesterId: String # string
  createdAt: BigInt!
}

type Payout @entity {
  id: ID!
  escrowAddress: Bytes! # address
  recipient: Bytes! # address
  amount: BigInt!
  createdAt: BigInt!
}

type DailyWorker @entity {
  id: ID!
  timestamp: BigInt!
  address: Bytes! # address
  escrowAddress: Bytes! # address
}

##################################################
#                     Events                     #
##################################################

# HMToken
type HMTTransferEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  from: Bytes! # address
  to: Bytes! # address
  amount: BigInt!
}

type HMTBulkTransferEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  txId: BigInt!
  bulkCount: BigInt!
}

type HMTApprovalEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  owner: Bytes! # address
  spender: Bytes! # address
  amount: BigInt!
}

type HMTBulkApprovalEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  txId: BigInt!
  bulkCount: BigInt!
}

# Escrow
type FundEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  sender: Bytes! # address
  amount: BigInt!
}

type SetupEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  sender: Bytes! # address
}

type StoreResultsEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  sender: Bytes! # address
  intermediateResultsUrl: String! # string
}

type BulkPayoutEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  sender: Bytes! # address
  bulkPayoutTxId: BigInt!
  bulkCount: BigInt!
}

type PendingStatusEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  sender: Bytes! # address
}

type CancelledStatusEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  sender: Bytes! # address
}

type PartialStatusEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  sender: Bytes! # address
}

type PaidStatusEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  sender: Bytes! # address
}

type CompletedStatusEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  sender: Bytes! # address
}

# KVStore
type KVStoreSetEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  leaderAddress: Bytes! # address
  key: String!
  value: String!
}

# Staking
type StakeDepositedEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  staker: Bytes! # address
  amount: BigInt!
}

type StakeLockedEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  staker: Bytes! # address
  amount: BigInt!
  lockedUntilTimestamp: BigInt!
}

type StakeWithdrawnEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  staker: Bytes! # address
  amount: BigInt!
}

type StakeSlashedEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  staker: Bytes! # address
  slasher: Bytes! # address
  amount: BigInt!
}

type StakeAllocatedEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  staker: Bytes! # address
  amount: BigInt!
}

type AllocationClosedEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  staker: Bytes! # address
  amount: BigInt!
}

# RewardPool
type RewardAddedEvent @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  txHash: Bytes!

  escrowAddress: Bytes! # address
  staker: Bytes! # address
  slasher: Bytes # address
  amount: BigInt!
}

##################################################
#                   Statistics                   #
##################################################

type HMTokenStatistics @entity {
  id: ID!
  totalTransferEventCount: BigInt!
  totalBulkTransferEventCount: BigInt!
  totalApprovalEventCount: BigInt!
  totalBulkApprovalEventCount: BigInt!
  totalValueTransfered: BigInt!
  holders: BigInt!
}

type EscrowStatistics @entity {
  id: ID!
  fundEventCount: BigInt!
  setupEventCount: BigInt!
  storeResultsEventCount: BigInt!
  bulkPayoutEventCount: BigInt!
  pendingStatusEventCount: BigInt!
  cancelledStatusEventCount: BigInt!
  partialStatusEventCount: BigInt!
  paidStatusEventCount: BigInt!
  completedStatusEventCount: BigInt!
  totalEventCount: BigInt!
  totalEscrowCount: BigInt!
}

type EventDayData @entity {
  id: ID!
  timestamp: Int!
  dailyFundEventCount: BigInt!
  dailySetupEventCount: BigInt!
  dailyStoreResultsEventCount: BigInt!
  dailyBulkPayoutEventCount: BigInt!
  dailyPendingStatusEventCount: BigInt!
  dailyCancelledStatusEventCount: BigInt!
  dailyPartialStatusEventCount: BigInt!
  dailyPaidStatusEventCount: BigInt!
  dailyCompletedStatusEventCount: BigInt!
  dailyTotalEventCount: BigInt!
  dailyEscrowCount: BigInt!
  dailyWorkerCount: BigInt!
  dailyPayoutCount: BigInt!
  dailyPayoutAmount: BigInt!
  dailyHMTTransferCount: BigInt!
  dailyHMTTransferAmount: BigInt!
}

type LeaderStatistics @entity {
  id: ID!
  leaders: BigInt!
}
