version: '3.8'
services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - 5432:5432
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements",
        "-cmax_connections=200"
      ]
    environment:
      POSTGRES_HOST: 0.0.0.0
      POSTGRES_USER: default
      POSTGRES_PASSWORD: qwerty
      POSTGRES_PORT: 5432
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - ./docker-db:/var/lib/postgresql/data
  minio:
    container_name: minio
    image: minio/minio:RELEASE.2022-05-26T05-48-41Z
    ports:
      - 9001:9001
      - 9000:9000
    entrypoint: 'sh'
    command:
      -c "mkdir -p /data/bucket && minio server /data --console-address ':9001'"
    environment:
      MINIO_ROOT_USER: access-key
      MINIO_ROOT_PASSWORD: secret-key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3
  minio-mc:
    container_name: minio-mc
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000  access-key secret-key;
      /usr/bin/mc mb myminio/bucket;
      /usr/bin/mc anonymous set public myminio/bucket;
      "
  graph-node:
    container_name: graph-node
    hostname: graph-node
    image: graphprotocol/graph-node
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8000 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - 8000:8000
      - 8001:8001
      - 8020:8020
      - 8030:8030
      - 8040:8040
    depends_on:
      - ipfs
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      postgres_host: postgres
      postgres_user: default
      postgres_pass: qwerty
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'localhost:http://host.docker.internal:8545'
      GRAPH_LOG: info
  ipfs:
    hostname: ipfs
    image: ipfs/kubo:v0.14.0
    ports:
      - 5010:5001